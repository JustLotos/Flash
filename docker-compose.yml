version: "3.1"
volumes:
  postgres: ~
  redis: ~
  elastic01: ~
services:
  nginx:
    build: docker/images/nginx
    working_dir: /app
    volumes:
      - ${PWD}:/app
      - ${PWD}/docker/images/nginx/hosts/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    links:
      - php
  postgres:
    image: postgres:alpine
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pguser
    ports:
      - "5432:5432"
  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    volumes:
      - redis:/var/lib/redis/data
  php:
    build: docker/images/php
    working_dir: /app
    user: ${UID:-1000}:${GID:-1000}
    volumes:
      - ./:/app
      - ${HOME}/.composer:/.composer
    environment:
      - COMPOSER_ALLOW_SUPERUSER=1
      - "PHP_IDE_CONFIG=serverName=flash.back"
    links:
      - postgres
  node:
    build: docker/images/node
    working_dir: /app
    environment:
      - YARN_CACHE_FOLDER=/app/var/cache/yarn
    user: ${UID:-1000}:${GID:-1000}
    volumes:
      - ./:/app
      - ${HOME}/.yarn:/yarn
  mailhog:
    image: mailhog/mailhog
    container_name: 'mailhog'
    ports:
      - "1025:1025"
      - "8025:8025"
#  elasticsearch:
#    container_name: es-container
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
#    environment:
#      - node.name=es01
#      - xpack.security.enabled=false
#      - "discovery.type=single-node"
#    networks:
#      - es-net
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - elastic01:/usr/share/elasticsearch/data
#    ports:
#      - "9200:9200"
#  kibana:
#    container_name: kb-container
#    image: docker.elastic.co/kibana/kibana:7.2.0
#    environment:
#      - ELASTICSEARCH_HOSTS=http://172.17.0.1:9200
#    networks:
#      - es-net
#    depends_on:
#      - elasticsearch
#    ports:
#      - "5601:5601"
#networks:
#  es-net:
#    driver: bridge